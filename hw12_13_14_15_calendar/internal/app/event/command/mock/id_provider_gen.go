// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ekhvalov/golang-otus/hw12_13_14_15_calendar/internal/app/event/command (interfaces: IDProvider)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIDProvider is a mock of IDProvider interface.
type MockIDProvider struct {
	ctrl     *gomock.Controller
	recorder *MockIDProviderMockRecorder
}

// MockIDProviderMockRecorder is the mock recorder for MockIDProvider.
type MockIDProviderMockRecorder struct {
	mock *MockIDProvider
}

// NewMockIDProvider creates a new mock instance.
func NewMockIDProvider(ctrl *gomock.Controller) *MockIDProvider {
	mock := &MockIDProvider{ctrl: ctrl}
	mock.recorder = &MockIDProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDProvider) EXPECT() *MockIDProviderMockRecorder {
	return m.recorder
}

// GetID mocks base method.
func (m *MockIDProvider) GetID() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetID indicates an expected call of GetID.
func (mr *MockIDProviderMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockIDProvider)(nil).GetID))
}
